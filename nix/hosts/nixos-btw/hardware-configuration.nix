# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, inputs, system, ... }:
let
    asus-wmi-screenpad = inputs.asus-wmi-screenpad.defaultPackage.${system}.override pkgs.linuxPackages.kernel;
in {
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];
  boot.kernelPackages = pkgs.linuxPackages;

  boot.initrd.availableKernelModules = [ "xhci_pci" "thunderbolt" "vmd" "nvme" "usb_storage" "sd_mod" "rtsx_usb_sdmmc" ];
  boot.initrd.kernelModules = [ ];
  boot.extraModulePackages = [
      asus-wmi-screenpad
  ];
  boot.kernelModules = [
    "kvm-intel"
    "asus-wmi-screenpad"
  ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/c4f6be9b-9c05-417b-b3dd-f88705c7f7f0";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/47FE-74B5";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/fd63935b-c9da-4c02-9aa2-99169cd68569"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
